{
  "contractName": "MintableUniversalTokenMock",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_xactionFeeMult",
          "type": "uint256"
        }
      ],
      "name": "modifyTransFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_share",
          "type": "uint256"
        }
      ],
      "name": "modifyFeeShare",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DECIMALS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "xactionFeeNumerator",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isCapper",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newCap",
          "type": "uint256"
        }
      ],
      "name": "setCap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceCapper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "WAD",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "someAddr",
          "type": "address"
        }
      ],
      "name": "isDepot",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addCapper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DENOMINATOR",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "depot",
          "type": "address"
        }
      ],
      "name": "removeDepot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "onlyMinterMock",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "depot",
          "type": "address"
        }
      ],
      "name": "addDepot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "xactionFeeShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "initialAccount",
          "type": "address"
        },
        {
          "name": "initialBalance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "ModifyTransFeeCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newShare",
          "type": "uint256"
        }
      ],
      "name": "ModifyFeeShareCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "CapperAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "CapperRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_xactionFeeMult\",\"type\":\"uint256\"}],\"name\":\"modifyTransFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_share\",\"type\":\"uint256\"}],\"name\":\"modifyFeeShare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DECIMALS\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xactionFeeNumerator\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isCapper\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"setCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceCapper\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"WAD\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"someAddr\",\"type\":\"address\"}],\"name\":\"isDepot\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addCapper\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DENOMINATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"depot\",\"type\":\"address\"}],\"name\":\"removeDepot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"onlyMinterMock\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"depot\",\"type\":\"address\"}],\"name\":\"addDepot\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xactionFeeShare\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialAccount\",\"type\":\"address\"},{\"name\":\"initialBalance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"ModifyTransFeeCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"newShare\",\"type\":\"uint256\"}],\"name\":\"ModifyFeeShareCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"CapperAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"CapperRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"cap()\":{\"return\":\"the cap for the token minting.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/C/Users/ctapa/source/payment-system-contracts/contracts/mocks/MintableUniversalTokenMock.sol\":\"MintableUniversalTokenMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/ctapa/source/payment-system-contracts/contracts/Capped.sol\":{\"keccak256\":\"0x9dc5c8121d1cb54f42a532b68ea78b8fc3e499b27076be3a03ed6dfafe5b90cd\",\"urls\":[\"bzzr://28b353e2e9370142e2e9bc543eda2c20270b7cb374a0a46d1fac7d895e4300e2\"]},\"/C/Users/ctapa/source/payment-system-contracts/contracts/depot.sol\":{\"keccak256\":\"0x1712046bb9f8c64323949ab1ecd92b964d32f0de085af22d2d39820e7eeb6945\",\"urls\":[\"bzzr://04c1b5c99ddbf5c94e6aec9c6d0554f8aa84978f612ddb2d7a7c1022e3f55fbd\"]},\"/C/Users/ctapa/source/payment-system-contracts/contracts/mocks/MintableUniversalTokenMock.sol\":{\"keccak256\":\"0xadaab77fb09c5df0c7d6f6275e876fda5775693aeb8e5c1610898b04a17845e1\",\"urls\":[\"bzzr://9a5a1becc6a30d92d9a25d063e92a34b26a50153c10efaee51e06480a6b7db0b\"]},\"/C/Users/ctapa/source/payment-system-contracts/contracts/mocks/MinterRoleMock.sol\":{\"keccak256\":\"0x739b4fad26f5a8048e54a74f03d5bbecfa564b345a0e855ffcd2b8236923f6b7\",\"urls\":[\"bzzr://a474ebaaacbddcdf51221bb300a2f790585141b71cc6e7ba982f66c52173ddbb\"]},\"/C/Users/ctapa/source/payment-system-contracts/contracts/token.sol\":{\"keccak256\":\"0x98759479bb202c9836bce0d6cc0972094b3699a7429ccff2ed7b5d131ed7d638\",\"urls\":[\"bzzr://e49dcec81a3331f132040023ec5cf1a7b46cc983cefefecaee77d2bf02d87382\"]},\"/C/Users/ctapa/source/payment-system-contracts/contracts/universaltoken.sol\":{\"keccak256\":\"0x52b8b7f99518d6c4f5dd1a7b795c6e12bb1f24a4f63467c559c9a4f43ee830bd\",\"urls\":[\"bzzr://b5918a0d8949972f62f565abe0bd4cac886c0f598f4ead69351c8d953d60bfbe\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xa6e47d62e68903c8fff23500d80e7cc8085b9127995803478d9982cd8a6d49e4\",\"urls\":[\"bzzr://7c87eb3c145fe7592c97baa287501faff7e81c1965333c9b042ffb6b387e94a1\"]},\"openzeppelin-solidity/contracts/access/roles/CapperRole.sol\":{\"keccak256\":\"0x35e7cf3a09662f87be1a3e0461989ad1d9e4d3bcfc2771e9944cb19a1005729d\",\"urls\":[\"bzzr://0f1e99a47923fa189242c29dd4357eee42fb8338f6e020f33fddcd267b96b6d1\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xc9883d8ad7467c478c825128accf69c8104f54b51354b37be01c0ef1432f9253\",\"urls\":[\"bzzr://fa9ed6b6b7c5a571628b27932215efb36765cc5ed95db03dd1dc3ef416c57fc5\"]},\"openzeppelin-solidity/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0x9c483b37c788ed1f3ce0c29934e5c41b9e84ff954380c04bffdf42c1e215a1a8\",\"urls\":[\"bzzr://1727e08315c67d0203510d5d50e645c80a569df7964715eddaec10bf90d70bab\"]},\"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x9cb69bde8cc3efdd07a2c372e78b664e961f505b3e4195ee27f06b358ffef996\",\"urls\":[\"bzzr://13da310cd2989e27357c2912085af0f1925047070f48be175c6b7e2b0299084f\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xdd18f05c74536a06166c90a17ec3c6932853764f292bed314ceb23e730ff83af\",\"urls\":[\"bzzr://1d8a608339978ac18782f7051816cf23b4072d8814979e3ef74788cc6025cca0\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x973e50d102a48ea6e132f18793b096910ed508656e89706744112cbb4ecaa9dd\",\"urls\":[\"bzzr://3b4ace05d2fa540ae11da5a4658f0993f4a364737d678d6ec96f12ef6caeeb7d\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xaa2cf35177f37a9af9c975a973c813c5520be56ccee3a39b6c9883d4781cd072\",\"urls\":[\"bzzr://2244d517ff73299ad9b6c9dcb7d0788e5e452d8b1624d3027c1fb152135de8f4\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x9f78ffbde6b7ea69b440136d5bdec213eac31de62a7689e8f6eed5cf3d1ebf4e\",\"urls\":[\"bzzr://cf41973b51764cd1699274eee6f379760cf6b92ddee1634712363f713c8c20e3\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0x34ae26a75fc5dd5d3d283d0d95a080212e81734a5cab7be187778e74224d57d1\",\"urls\":[\"bzzr://8ed5c93c550934720a33a387f8272b252b5aa8c5e0e4c6e21d5e92c662632bbb\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc8a7f15fa44eb10057f8bcb58418d3aed6f5267d211d18f93f3d4e0293e3da44\",\"urls\":[\"bzzr://8825e2508348b01a091ff47b8525e583b6e5604f6679684f805d67a9a6a2a7e9\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051604080620036bd83398101806040528101908080519060200190929190805190602001909291905050506200006360028262000579640100000000026200171c179091906401000000009004565b6064610bb8338380336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36200014133620005bb640100000000026401000000009004565b6200015b3362000625640100000000026401000000009004565b6000600760006101000a81548160ff02191690831515021790555062000190336200068f640100000000026401000000009004565b60008111151562000209576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4361702063616e6e6f74206265207a65726f000000000000000000000000000081525060200191505060405180910390fd5b806009819055505060008273ffffffffffffffffffffffffffffffffffffffff1614151515620002a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f70726f706f736564206f776e6572206973206e756c6c0000000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156200033557620002f682620006f964010000000002620016fd176401000000009004565b62000315826200073b64010000000002620013d8176401000000009004565b62000334826200077e64010000000002620012df176401000000009004565b5b5050600083111515620003d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f696e697469616c20737570706c79206d7573742062652067726561746572207481526020017f68616e203000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000821115156200044f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f666565206d756c7469706c696572206d757374206265206e6f6e2d7a65726f0081525060200191505060405180910390fd5b6040805190810160405280600481526020017f5545545200000000000000000000000000000000000000000000000000000000815250600a90805190602001906200049c92919062000b35565b50606060405190810160405280603581526020017f556e6976657273616c204576616e67656c69737420546f6b656e202d2062792081526020017f526f636b20537461626c6520546f6b656e20496e630000000000000000000000815250600c90805190602001906200051192919062000b35565b506012600b8190555081600d8190555080600e819055505050506200054a82620007c1640100000000026200161d176401000000009004565b151562000571576200057082620007ee64010000000002620014f3176401000000009004565b5b505062000be4565b6000806000841415620005905760009150620005b4565b8284029050828482811515620005a257fe5b04141515620005b057600080fd5b8091505b5092915050565b620005df8160016200083164010000000002620028ad179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167fa7555c95b69d4f5cc847881feb4ab2883a1921319e34fa2043747b793d65b36e60405160405180910390a250565b620006498160066200083164010000000002620028ad179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b620006b38160086200083164010000000002620028ad179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b62000712620008f4640100000000026401000000009004565b15156200071e57600080fd5b62000738816200094b640100000000026401000000009004565b50565b620007553362000a46640100000000026401000000009004565b15156200076157600080fd5b6200077b81620005bb640100000000026401000000009004565b50565b620007983362000a73640100000000026401000000009004565b1515620007a457600080fd5b620007be8162000625640100000000026401000000009004565b50565b6000620007e782600862000aa06401000000000262001c7c179091906401000000009004565b9050919050565b6200080833620007c1640100000000026401000000009004565b15156200081457600080fd5b6200082e816200068f640100000000026401000000009004565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200086e57600080fd5b62000889828262000aa0640100000000026401000000009004565b1515156200089657600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200098857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600062000a6c82600162000aa06401000000000262001c7c179091906401000000009004565b9050919050565b600062000a9982600662000aa06401000000000262001c7c179091906401000000009004565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151562000ade57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000b7857805160ff191683800117855562000ba9565b8280016001018555821562000ba9579182015b8281111562000ba857825182559160200191906001019062000b8b565b5b50905062000bb8919062000bbc565b5090565b62000be191905b8082111562000bdd57600081600090555060010162000bc3565b5090565b90565b612ac98062000bf46000396000f300608060405260043610610204576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630465832e1461020957806306fdde0314610236578063095ea7b3146102c657806318160ddd1461032b57806323b872dd1461035657806329c71c1b146103db5780632e0f2625146104085780633092afd514610433578063313ce56714610476578063355274ea146104a157806336a9f2f7146104cc57806339509351146104f7578063395645611461055c5780633f4ba83a146105b757806340c10f19146105ce57806346fbf68e1461063357806347786d371461068e5780635c975abb146106bb5780635d5576f8146106ea5780636a146024146107015780636b3b2cf91461072c5780636ef8d66d1461078757806370a082311461079e578063715018a6146107f557806382dc1ec41461080c5780638456cb591461084f5780638da5cb5b146108665780638dfbcf36146108bd5780638f32d59b14610900578063918f86741461092f57806395d89b411461095a578063983b2d56146109ea5780639865027514610a2d57806399396ace14610a44578063a457c2d714610a87578063a9059cbb14610aec578063aa271e1a14610b51578063b5dba35b14610bac578063bb318c4214610bc3578063c6117d3714610c06578063dd62ed3e14610c31578063f2fde38b14610ca8575b600080fd5b34801561021557600080fd5b5061023460048036038101908080359060200190929190505050610ceb565b005b34801561024257600080fd5b5061024b610df1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028b578082015181840152602081019050610270565b50505050905090810190601f1680156102b85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d257600080fd5b50610311600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e8f565b604051808215151515815260200191505060405180910390f35b34801561033757600080fd5b50610340610ebf565b6040518082815260200191505060405180910390f35b34801561036257600080fd5b506103c1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ec9565b604051808215151515815260200191505060405180910390f35b3480156103e757600080fd5b5061040660048036038101908080359060200190929190505050610efb565b005b34801561041457600080fd5b5061041d611001565b6040518082815260200191505060405180910390f35b34801561043f57600080fd5b50610474600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611006565b005b34801561048257600080fd5b5061048b611012565b6040518082815260200191505060405180910390f35b3480156104ad57600080fd5b506104b6611018565b6040518082815260200191505060405180910390f35b3480156104d857600080fd5b506104e1611022565b6040518082815260200191505060405180910390f35b34801561050357600080fd5b50610542600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611028565b604051808215151515815260200191505060405180910390f35b34801561056857600080fd5b5061059d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611058565b604051808215151515815260200191505060405180910390f35b3480156105c357600080fd5b506105cc611075565b005b3480156105da57600080fd5b50610619600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611124565b604051808215151515815260200191505060405180910390f35b34801561063f57600080fd5b50610674600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611140565b604051808215151515815260200191505060405180910390f35b34801561069a57600080fd5b506106b96004803603810190808035906020019092919050505061115d565b005b3480156106c757600080fd5b506106d061117d565b604051808215151515815260200191505060405180910390f35b3480156106f657600080fd5b506106ff611194565b005b34801561070d57600080fd5b5061071661119f565b6040518082815260200191505060405180910390f35b34801561073857600080fd5b5061076d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a7565b604051808215151515815260200191505060405180910390f35b34801561079357600080fd5b5061079c6111b9565b005b3480156107aa57600080fd5b506107df600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111c4565b6040518082815260200191505060405180910390f35b34801561080157600080fd5b5061080a61120d565b005b34801561081857600080fd5b5061084d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112df565b005b34801561085b57600080fd5b506108646112ff565b005b34801561087257600080fd5b5061087b6113af565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108c957600080fd5b506108fe600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113d8565b005b34801561090c57600080fd5b506109156113f8565b604051808215151515815260200191505060405180910390f35b34801561093b57600080fd5b5061094461144f565b6040518082815260200191505060405180910390f35b34801561096657600080fd5b5061096f611455565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109af578082015181840152602081019050610994565b50505050905090810190601f1680156109dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109f657600080fd5b50610a2b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114f3565b005b348015610a3957600080fd5b50610a42611513565b005b348015610a5057600080fd5b50610a85600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061151e565b005b348015610a9357600080fd5b50610ad2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115bd565b604051808215151515815260200191505060405180910390f35b348015610af857600080fd5b50610b37600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115ed565b604051808215151515815260200191505060405180910390f35b348015610b5d57600080fd5b50610b92600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061161d565b604051808215151515815260200191505060405180910390f35b348015610bb857600080fd5b50610bc161163a565b005b348015610bcf57600080fd5b50610c04600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611650565b005b348015610c1257600080fd5b50610c1b611670565b6040518082815260200191505060405180910390f35b348015610c3d57600080fd5b50610c92600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611676565b6040518082815260200191505060405180910390f35b348015610cb457600080fd5b50610ce9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116fd565b005b610cf36113f8565b1515610cfe57600080fd5b610d1260048261171c90919063ffffffff16565b612710111515610db0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001807f63616e6e6f74206d6f64696679207472616e73616374696f6e2066656520746f81526020017f206d6f7265207468616e20302e3235000000000000000000000000000000000081525060400191505060405180910390fd5b80600d819055507f89c8aa3d17ece8bbdd09fea5e6c512786ff98211bc3e694f1fe9226cb1c0c2a4816040518082815260200191505060405180910390a150565b600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e875780601f10610e5c57610100808354040283529160200191610e87565b820191906000526020600020905b815481529060010190602001808311610e6a57829003601f168201915b505050505081565b6000600760009054906101000a900460ff16151515610ead57600080fd5b610eb7838361175a565b905092915050565b6000600554905090565b6000600760009054906101000a900460ff16151515610ee757600080fd5b610ef2848484611887565b90509392505050565b610f036113f8565b1515610f0e57600080fd5b610f2260038261171c90919063ffffffff16565b612710111515610fc0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f52535449207368617265206d757374206265206c657373207468616e206f6e6581526020017f2d7468697264000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600e819055507f866076dfb2d5facff41b41ac7d82b720b5307b543b2299105b580d1d8e33113f816040518082815260200191505060405180910390a150565b601281565b61100f81611a39565b50565b600b5481565b6000600954905090565b600d5481565b6000600760009054906101000a900460ff1615151561104657600080fd5b6110508383611a45565b905092915050565b600061106e826001611c7c90919063ffffffff16565b9050919050565b61107e33611140565b151561108957600080fd5b600760009054906101000a900460ff1615156110a457600080fd5b6000600760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061112f83611650565b6111398383611d10565b5092915050565b6000611156826006611c7c90919063ffffffff16565b9050919050565b61116633611058565b151561117157600080fd5b61117a81611e4a565b50565b6000600760009054906101000a900460ff16905090565b61119d33611e5f565b565b6012600a0a81565b60006111b282611eb9565b9050919050565b6111c233611f0f565b565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6112156113f8565b151561122057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6112e833611140565b15156112f357600080fd5b6112fc81611f69565b50565b61130833611140565b151561131357600080fd5b600760009054906101000a900460ff1615151561132f57600080fd5b6001600760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113e133611058565b15156113ec57600080fd5b6113f581611fc3565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b61271081565b600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114eb5780601f106114c0576101008083540402835291602001916114eb565b820191906000526020600020905b8154815290600101906020018083116114ce57829003601f168201915b505050505081565b6114fc3361161d565b151561150757600080fd5b6115108161201d565b50565b61151c33611a39565b565b61152733611058565b151561153257600080fd5b8061153c81611eb9565b15156115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6f742061206465706f7420616464726573730000000000000000000000000081525060200191505060405180910390fd5b6115b982612077565b5050565b6000600760009054906101000a900460ff161515156115db57600080fd5b6115e583836120d2565b905092915050565b6000600760009054906101000a900460ff1615151561160b57600080fd5b6116158383612309565b905092915050565b6000611633826008611c7c90919063ffffffff16565b9050919050565b6116433361161d565b151561164e57600080fd5b565b61165933611058565b151561166457600080fd5b61166d81612320565b50565b600e5481565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6117056113f8565b151561171057600080fd5b61171981612420565b50565b60008060008414156117315760009150611753565b828402905082848281151561174257fe5b0414151561174f57600080fd5b8091505b5092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561179757600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561191457600080fd5b6119a382600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461251a90919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a2e84848461253b565b600190509392505050565b611a4281612759565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611a8257600080fd5b611b1182600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127b390919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611cb957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000611d1b3361161d565b1515611d2657600080fd5b82611d3081611eb9565b1515611da4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6f742061206465706f7420616464726573730000000000000000000000000081525060200191505060405180910390fd5b600954611dc184611db3610ebf565b6127b390919063ffffffff16565b11151515611e37576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6d696e742076616c7565206c696d69742065786365656465640000000000000081525060200191505060405180910390fd5b611e4184846127d4565b91505092915050565b600954811115611e5c57806009819055505b50565b611e738160016127fe90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f427400d279c506df610224b22ecce89b693fc1865864113f21c8d19c1f0c2a3b60405160405180910390a250565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b611f238160066127fe90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b611f7d8160066128ad90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b611fd78160016128ad90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa7555c95b69d4f5cc847881feb4ab2883a1921319e34fa2043747b793d65b36e60405160405180910390a250565b6120318160086128ad90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561210f57600080fd5b61219e82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461251a90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600061231633848461253b565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156123c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6465706f742063616e6e6f74206265206e756c6c00000000000000000000000081525060200191505060405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561245c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008083831115151561252c57600080fd5b82840390508091505092915050565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561258957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156125c557600080fd5b61261781600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461251a90919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506126ac81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127b390919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b61276d8160086127fe90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008082840190508381101515156127ca57600080fd5b8091505092915050565b60006127df3361161d565b15156127ea57600080fd5b6127f4838361295d565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561283a57600080fd5b6128448282611c7c565b151561284f57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156128e957600080fd5b6128f38282611c7c565b1515156128ff57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561298357600080fd5b612998816005546127b390919063ffffffff16565b6005819055506129f081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127b390919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505600a165627a7a723058209eca9b6b2ccc7a7fb3d20cb7cc2f85a73d0e05216734a825baee760c7bd5d99e0029",
  "deployedBytecode": "0x608060405260043610610204576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630465832e1461020957806306fdde0314610236578063095ea7b3146102c657806318160ddd1461032b57806323b872dd1461035657806329c71c1b146103db5780632e0f2625146104085780633092afd514610433578063313ce56714610476578063355274ea146104a157806336a9f2f7146104cc57806339509351146104f7578063395645611461055c5780633f4ba83a146105b757806340c10f19146105ce57806346fbf68e1461063357806347786d371461068e5780635c975abb146106bb5780635d5576f8146106ea5780636a146024146107015780636b3b2cf91461072c5780636ef8d66d1461078757806370a082311461079e578063715018a6146107f557806382dc1ec41461080c5780638456cb591461084f5780638da5cb5b146108665780638dfbcf36146108bd5780638f32d59b14610900578063918f86741461092f57806395d89b411461095a578063983b2d56146109ea5780639865027514610a2d57806399396ace14610a44578063a457c2d714610a87578063a9059cbb14610aec578063aa271e1a14610b51578063b5dba35b14610bac578063bb318c4214610bc3578063c6117d3714610c06578063dd62ed3e14610c31578063f2fde38b14610ca8575b600080fd5b34801561021557600080fd5b5061023460048036038101908080359060200190929190505050610ceb565b005b34801561024257600080fd5b5061024b610df1565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028b578082015181840152602081019050610270565b50505050905090810190601f1680156102b85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102d257600080fd5b50610311600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e8f565b604051808215151515815260200191505060405180910390f35b34801561033757600080fd5b50610340610ebf565b6040518082815260200191505060405180910390f35b34801561036257600080fd5b506103c1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ec9565b604051808215151515815260200191505060405180910390f35b3480156103e757600080fd5b5061040660048036038101908080359060200190929190505050610efb565b005b34801561041457600080fd5b5061041d611001565b6040518082815260200191505060405180910390f35b34801561043f57600080fd5b50610474600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611006565b005b34801561048257600080fd5b5061048b611012565b6040518082815260200191505060405180910390f35b3480156104ad57600080fd5b506104b6611018565b6040518082815260200191505060405180910390f35b3480156104d857600080fd5b506104e1611022565b6040518082815260200191505060405180910390f35b34801561050357600080fd5b50610542600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611028565b604051808215151515815260200191505060405180910390f35b34801561056857600080fd5b5061059d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611058565b604051808215151515815260200191505060405180910390f35b3480156105c357600080fd5b506105cc611075565b005b3480156105da57600080fd5b50610619600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611124565b604051808215151515815260200191505060405180910390f35b34801561063f57600080fd5b50610674600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611140565b604051808215151515815260200191505060405180910390f35b34801561069a57600080fd5b506106b96004803603810190808035906020019092919050505061115d565b005b3480156106c757600080fd5b506106d061117d565b604051808215151515815260200191505060405180910390f35b3480156106f657600080fd5b506106ff611194565b005b34801561070d57600080fd5b5061071661119f565b6040518082815260200191505060405180910390f35b34801561073857600080fd5b5061076d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a7565b604051808215151515815260200191505060405180910390f35b34801561079357600080fd5b5061079c6111b9565b005b3480156107aa57600080fd5b506107df600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111c4565b6040518082815260200191505060405180910390f35b34801561080157600080fd5b5061080a61120d565b005b34801561081857600080fd5b5061084d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112df565b005b34801561085b57600080fd5b506108646112ff565b005b34801561087257600080fd5b5061087b6113af565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108c957600080fd5b506108fe600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113d8565b005b34801561090c57600080fd5b506109156113f8565b604051808215151515815260200191505060405180910390f35b34801561093b57600080fd5b5061094461144f565b6040518082815260200191505060405180910390f35b34801561096657600080fd5b5061096f611455565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156109af578082015181840152602081019050610994565b50505050905090810190601f1680156109dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156109f657600080fd5b50610a2b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114f3565b005b348015610a3957600080fd5b50610a42611513565b005b348015610a5057600080fd5b50610a85600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061151e565b005b348015610a9357600080fd5b50610ad2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115bd565b604051808215151515815260200191505060405180910390f35b348015610af857600080fd5b50610b37600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115ed565b604051808215151515815260200191505060405180910390f35b348015610b5d57600080fd5b50610b92600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061161d565b604051808215151515815260200191505060405180910390f35b348015610bb857600080fd5b50610bc161163a565b005b348015610bcf57600080fd5b50610c04600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611650565b005b348015610c1257600080fd5b50610c1b611670565b6040518082815260200191505060405180910390f35b348015610c3d57600080fd5b50610c92600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611676565b6040518082815260200191505060405180910390f35b348015610cb457600080fd5b50610ce9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116fd565b005b610cf36113f8565b1515610cfe57600080fd5b610d1260048261171c90919063ffffffff16565b612710111515610db0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001807f63616e6e6f74206d6f64696679207472616e73616374696f6e2066656520746f81526020017f206d6f7265207468616e20302e3235000000000000000000000000000000000081525060400191505060405180910390fd5b80600d819055507f89c8aa3d17ece8bbdd09fea5e6c512786ff98211bc3e694f1fe9226cb1c0c2a4816040518082815260200191505060405180910390a150565b600c8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e875780601f10610e5c57610100808354040283529160200191610e87565b820191906000526020600020905b815481529060010190602001808311610e6a57829003601f168201915b505050505081565b6000600760009054906101000a900460ff16151515610ead57600080fd5b610eb7838361175a565b905092915050565b6000600554905090565b6000600760009054906101000a900460ff16151515610ee757600080fd5b610ef2848484611887565b90509392505050565b610f036113f8565b1515610f0e57600080fd5b610f2260038261171c90919063ffffffff16565b612710111515610fc0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f52535449207368617265206d757374206265206c657373207468616e206f6e6581526020017f2d7468697264000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600e819055507f866076dfb2d5facff41b41ac7d82b720b5307b543b2299105b580d1d8e33113f816040518082815260200191505060405180910390a150565b601281565b61100f81611a39565b50565b600b5481565b6000600954905090565b600d5481565b6000600760009054906101000a900460ff1615151561104657600080fd5b6110508383611a45565b905092915050565b600061106e826001611c7c90919063ffffffff16565b9050919050565b61107e33611140565b151561108957600080fd5b600760009054906101000a900460ff1615156110a457600080fd5b6000600760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061112f83611650565b6111398383611d10565b5092915050565b6000611156826006611c7c90919063ffffffff16565b9050919050565b61116633611058565b151561117157600080fd5b61117a81611e4a565b50565b6000600760009054906101000a900460ff16905090565b61119d33611e5f565b565b6012600a0a81565b60006111b282611eb9565b9050919050565b6111c233611f0f565b565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6112156113f8565b151561122057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6112e833611140565b15156112f357600080fd5b6112fc81611f69565b50565b61130833611140565b151561131357600080fd5b600760009054906101000a900460ff1615151561132f57600080fd5b6001600760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113e133611058565b15156113ec57600080fd5b6113f581611fc3565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b61271081565b600a8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114eb5780601f106114c0576101008083540402835291602001916114eb565b820191906000526020600020905b8154815290600101906020018083116114ce57829003601f168201915b505050505081565b6114fc3361161d565b151561150757600080fd5b6115108161201d565b50565b61151c33611a39565b565b61152733611058565b151561153257600080fd5b8061153c81611eb9565b15156115b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6f742061206465706f7420616464726573730000000000000000000000000081525060200191505060405180910390fd5b6115b982612077565b5050565b6000600760009054906101000a900460ff161515156115db57600080fd5b6115e583836120d2565b905092915050565b6000600760009054906101000a900460ff1615151561160b57600080fd5b6116158383612309565b905092915050565b6000611633826008611c7c90919063ffffffff16565b9050919050565b6116433361161d565b151561164e57600080fd5b565b61165933611058565b151561166457600080fd5b61166d81612320565b50565b600e5481565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6117056113f8565b151561171057600080fd5b61171981612420565b50565b60008060008414156117315760009150611753565b828402905082848281151561174257fe5b0414151561174f57600080fd5b8091505b5092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561179757600080fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561191457600080fd5b6119a382600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461251a90919063ffffffff16565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611a2e84848461253b565b600190509392505050565b611a4281612759565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611a8257600080fd5b611b1182600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127b390919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611cb957600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000611d1b3361161d565b1515611d2657600080fd5b82611d3081611eb9565b1515611da4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6e6f742061206465706f7420616464726573730000000000000000000000000081525060200191505060405180910390fd5b600954611dc184611db3610ebf565b6127b390919063ffffffff16565b11151515611e37576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f6d696e742076616c7565206c696d69742065786365656465640000000000000081525060200191505060405180910390fd5b611e4184846127d4565b91505092915050565b600954811115611e5c57806009819055505b50565b611e738160016127fe90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f427400d279c506df610224b22ecce89b693fc1865864113f21c8d19c1f0c2a3b60405160405180910390a250565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b611f238160066127fe90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b611f7d8160066128ad90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b611fd78160016128ad90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fa7555c95b69d4f5cc847881feb4ab2883a1921319e34fa2043747b793d65b36e60405160405180910390a250565b6120318160086128ad90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561210f57600080fd5b61219e82600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461251a90919063ffffffff16565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b600061231633848461253b565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156123c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f6465706f742063616e6e6f74206265206e756c6c00000000000000000000000081525060200191505060405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561245c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008083831115151561252c57600080fd5b82840390508091505092915050565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115151561258957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156125c557600080fd5b61261781600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461251a90919063ffffffff16565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506126ac81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127b390919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b61276d8160086127fe90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b60008082840190508381101515156127ca57600080fd5b8091505092915050565b60006127df3361161d565b15156127ea57600080fd5b6127f4838361295d565b6001905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561283a57600080fd5b6128448282611c7c565b151561284f57600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156128e957600080fd5b6128f38282611c7c565b1515156128ff57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561298357600080fd5b612998816005546127b390919063ffffffff16565b6005819055506129f081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546127b390919063ffffffff16565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a350505600a165627a7a723058209eca9b6b2ccc7a7fb3d20cb7cc2f85a73d0e05216734a825baee760c7bd5d99e0029",
  "sourceMap": "90:550:16:-;;;165:347;8:9:-1;5:2;;;30:1;27;20:12;5:2;165:347:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:21;278:1;259:14;:18;;;;;;:21;;;;;:::i;:::-;282:3;287:4;618:10:33;630;1517:4:32;518:10:42;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;260:22:35;271:10;260;;;:22;;;:::i;:::-;::37;271:10;260;;;:22;;;:::i;:::-;350:5:39;340:7;;:15;;;;;;;;;;;;;;;;;;260:22:36;271:10;260;;;:22;;;:::i;:::-;435:1:0;429:3;:7;421:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;472:3;465:4;:10;;;;377:103;1553:1:32;1543:6;:11;;;;1535:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1607:6;1593:20;;:10;:20;;;;1589:142;;;1625:31;1649:6;1625:23;;;;;:31;;;:::i;:::-;1666:23;1682:6;1666:15;;;;;:23;;;:::i;:::-;1699;1715:6;1699:15;;;;;:23;;;:::i;:::-;1589:142;1445:292;;677:1:33;664:10;:14;656:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:1;738:7;:11;730:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:15;;;;;;;;;;;;;;;;;;:6;:15;;;;;;;;;;;;:::i;:::-;;820:62;;;;;;;;;;;;;;;;;;;;;;;:4;:62;;;;;;;;;;;;:::i;:::-;;1139:2:32;892:8:33;:19;;;;943:7;921:19;:29;;;;978:8;960:15;:26;;;;492:501;;;354:30:16;369:14;354;;;;;:30;;;:::i;:::-;353:31;349:68;;;386:31;402:14;386:15;;;;;:31;;;:::i;:::-;349:68;165:347;;90:550;;204:381:41;262:7;523:9;491:1;486;:6;482:35;;;509:1;502:8;;;;482:35;539:1;535;:5;523:17;;563:1;558;554;:5;;;;;;;;:10;546:19;;;;;;;;579:1;572:8;;204:381;;;;;;:::o;629:108:35:-;681:20;693:7;681;:11;;;;;;:20;;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;::37:-;681:20;693:7;681;:11;;;;;;:20;;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;::36:-;681:20;693:7;681;:11;;;;;;:20;;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;1561:101:42:-;824:9;:7;;;:9;;;:::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;;;:28;;;:::i;:::-;1561:101;:::o;468:84:35:-;327:20;336:10;327:8;;;:20;;;:::i;:::-;319:29;;;;;;;;528:19;539:7;528:10;;;:19;;;:::i;:::-;468:84;:::o;::37:-;327:20;336:10;327:8;;;:20;;;:::i;:::-;319:29;;;;;;;;528:19;539:7;528:10;;;:19;;;:::i;:::-;468:84;:::o;364:100:36:-;420:4;439:20;451:7;439;:11;;;;;;:20;;;;;:::i;:::-;432:27;;364:100;;;:::o;468:84::-;327:20;336:10;327:8;;;:20;;;:::i;:::-;319:29;;;;;;;;528:19;539:7;528:10;;;:19;;;:::i;:::-;468:84;:::o;244:167:34:-;335:1;316:21;;:7;:21;;;;308:30;;;;;;;;353:18;357:4;363:7;353:3;;;:18;;;:::i;:::-;352:19;344:28;;;;;;;;402:4;379;:11;;:20;391:7;379:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:167;;:::o;926:83:42:-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;1796:169::-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;364:100:35:-;420:4;439:20;451:7;439;:11;;;;;;:20;;;;;:::i;:::-;432:27;;364:100;;;:::o;::37:-;420:4;439:20;451:7;439;:11;;;;;;:20;;;;;:::i;:::-;432:27;;364:100;;;:::o;725:166:34:-;809:4;850:1;831:21;;:7;:21;;;;823:30;;;;;;;;866:4;:11;;:20;878:7;866:20;;;;;;;;;;;;;;;;;;;;;;;;;859:27;;725:166;;;;:::o;90:550:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "90:550:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:287:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;999:287:33;;;;;;;;;;;;;;;;;;;;;;;;;;1313:19:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1313:19:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1313:19:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:158:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;557:158:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;640:83:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;640:83:44;;;;;;;;;;;;;;;;;;;;;;;371:182:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:182:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:238:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1292:238:33;;;;;;;;;;;;;;;;;;;;;;;;;;1107:34:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1107:34:32;;;;;;;;;;;;;;;;;;;;;;;139:79:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;139:79:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;1284:23:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1284:23:32;;;;;;;;;;;;;;;;;;;;;;;540:66:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;540:66:0;;;;;;;;;;;;;;;;;;;;;;;236:31:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;236:31:33;;;;;;;;;;;;;;;;;;;;;;;719:193:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;719:193:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:100:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;364:100:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:105:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1085:105:39;;;;;;516:121:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;516:121:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:100:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;364:100:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;610:86:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;610:86:0;;;;;;;;;;;;;;;;;;;;;;;;;;438:69:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;438:69:39;;;;;;;;;;;;;;;;;;;;;;;;;;;556::35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;556:69:35;;;;;;1147:39:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1147:39:32;;;;;;;;;;;;;;;;;;;;;;;576:98:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;576:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;556:69:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;556:69:37;;;;;;920:98:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;920:98:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:42;;;;;;468:84:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:84:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:103:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;900:103:39;;;;;;639:70:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:42;;;;;;;;;;;;;;;;;;;;;;;;;;;468:84:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:84:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:42;;;;;;;;;;;;;;;;;;;;;;;;;;;1047:40:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1047:40:32;;;;;;;;;;;;;;;;;;;;;;;1257:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1257:21:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1257:21:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:84:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:84:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;556:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;556:69:36;;;;;;457:115:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;457:115:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:203:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;916:203:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;217:150:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:100:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;364:100:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;222:54:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;222:54:17;;;;;;365:88:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:88:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;273:27:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;273:27:33;;;;;;;;;;;;;;;;;;;;;;;1335:150:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1335:150:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:101:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;999:287:33;824:9:42;:7;:9::i;:::-;816:18;;;;;;;;1106:22:33;1126:1;1106:15;:19;;:22;;;;:::i;:::-;1082:5:32;1092:36:33;1084:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1212:15;1190:19;:37;;;;1242;1263:15;1242:37;;;;;;;;;;;;;;;;;;999:287;:::o;1313:19:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;557:158:47:-;660:4;648:7:39;;;;;;;;;;;647:8;639:17;;;;;;;;681:29:47;695:7;704:5;681:13;:29::i;:::-;674:36;;557:158;;;;:::o;640:83:44:-;684:7;706:12;;699:19;;640:83;:::o;371:182:47:-;492:4;648:7:39;;;;;;;;;;;647:8;639:17;;;;;;;;513:35:47;532:4;538:2;542:5;513:18;:35::i;:::-;506:42;;371:182;;;;;:::o;1292:238:33:-;824:9:42;:7;:9::i;:::-;816:18;;;;;;;;1390:13:33;1401:1;1390:6;:10;;:13;;;;:::i;:::-;1082:5:32;1376:27:33;1368:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:6;1456:15;:24;;;;1495:28;1516:6;1495:28;;;;;;;;;;;;;;;;;;1292:238;:::o;1107:34:32:-;1139:2;1107:34;:::o;139:79:17:-;191:22;205:7;191:13;:22::i;:::-;139:79;:::o;1284:23:32:-;;;;:::o;540:66:0:-;575:7;597:4;;590:11;;540:66;:::o;236:31:33:-;;;;:::o;719:193:47:-;834:12;648:7:39;;;;;;;;;;;647:8;639:17;;;;;;;;863:44:47;887:7;896:10;863:23;:44::i;:::-;856:51;;719:193;;;;:::o;364:100:35:-;420:4;439:20;451:7;439;:11;;:20;;;;:::i;:::-;432:27;;364:100;;;:::o;1085:105:39:-;327:20:37;336:10;327:8;:20::i;:::-;319:29;;;;;;;;801:7:39;;;;;;;;;;;793:16;;;;;;;;1149:5;1139:7;;:15;;;;;;;;;;;;;;;;;;1165:20;1174:10;1165:20;;;;;;;;;;;;;;;;;;;;;;1085:105::o;516:121:16:-;574:4;586:18;601:2;586:14;:18::i;:::-;610:22;621:2;625:6;610:10;:22::i;:::-;;516:121;;;;:::o;364:100:37:-;420:4;439:20;451:7;439;:11;;:20;;;;:::i;:::-;432:27;;364:100;;;:::o;610:86:0:-;327:20:35;336:10;327:8;:20::i;:::-;319:29;;;;;;;;676:15:0;684:6;676:7;:15::i;:::-;610:86;:::o;438:69:39:-;476:4;495:7;;;;;;;;;;;488:14;;438:69;:::o;556::35:-;595:25;609:10;595:13;:25::i;:::-;556:69::o;1147:39:32:-;1139:2;1174;:12;1147:39;:::o;576:98:5:-;632:4;651:18;660:8;651;:18::i;:::-;644:25;;576:98;;;:::o;556:69:37:-;595:25;609:10;595:13;:25::i;:::-;556:69::o;920:98:44:-;975:7;997:9;:16;1007:5;997:16;;;;;;;;;;;;;;;;990:23;;920:98;;;:::o;1273:127:42:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;468:84:37:-;327:20;336:10;327:8;:20::i;:::-;319:29;;;;;;;;528:19;539:7;528:10;:19::i;:::-;468:84;:::o;900:103:39:-;327:20:37;336:10;327:8;:20::i;:::-;319:29;;;;;;;;648:7:39;;;;;;;;;;;647:8;639:17;;;;;;;;965:4;955:7;;:14;;;;;;;;;;;;;;;;;;980:18;987:10;980:18;;;;;;;;;;;;;;;;;;;;;;900:103::o;639:70:42:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;468:84:35:-;327:20;336:10;327:8;:20::i;:::-;319:29;;;;;;;;528:19;539:7;528:10;:19::i;:::-;468:84;:::o;926:83:42:-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;1047:40:32:-;1082:5;1047:40;:::o;1257:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;468:84:36:-;327:20;336:10;327:8;:20::i;:::-;319:29;;;;;;;;528:19;539:7;528:10;:19::i;:::-;468:84;:::o;556:69::-;595:25;609:10;595:13;:25::i;:::-;556:69::o;457:115:5:-;327:20:35;336:10;327:8;:20::i;:::-;319:29;;;;;;;;533:5:5;310:15;319:5;310:8;:15::i;:::-;302:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;548:19;561:5;548:12;:19::i;:::-;354:1:35;457:115:5;:::o;916:203:47:-;1036:12;648:7:39;;;;;;;;;;;647:8;639:17;;;;;;;;1065:49:47;1089:7;1098:15;1065:23;:49::i;:::-;1058:56;;916:203;;;;:::o;217:150::-;316:4;648:7:39;;;;;;;;;;;647:8;639:17;;;;;;;;337:25:47;352:2;356:5;337:14;:25::i;:::-;330:32;;217:150;;;;:::o;364:100:36:-;420:4;439:20;451:7;439;:11;;:20;;;;:::i;:::-;432:27;;364:100;;;:::o;222:54:17:-;327:20:36;336:10;327:8;:20::i;:::-;319:29;;;;;;;;222:54:17:o;365:88:5:-;327:20:35;336:10;327:8;:20::i;:::-;319:29;;;;;;;;432:16:5;442:5;432:9;:16::i;:::-;365:88;:::o;273:27:33:-;;;;:::o;1335:150:44:-;1432:7;1456:8;:15;1465:5;1456:15;;;;;;;;;;;;;;;:24;1472:7;1456:24;;;;;;;;;;;;;;;;1449:31;;1335:150;;;;:::o;1561:101:42:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;204:381:41:-;262:7;523:9;491:1;486;:6;482:35;;;509:1;502:8;;;;482:35;539:1;535;:5;523:17;;563:1;558;554;:5;;;;;;;;:10;546:19;;;;;;;;579:1;572:8;;204:381;;;;;;:::o;2380:220:44:-;2445:4;2484:1;2465:21;;:7;:21;;;;2457:30;;;;;;;;2526:5;2494:8;:20;2503:10;2494:20;;;;;;;;;;;;;;;:29;2515:7;2494:29;;;;;;;;;;;;;;;:37;;;;2563:7;2542:36;;2551:10;2542:36;;;2572:5;2542:36;;;;;;;;;;;;;;;;;;2591:4;2584:11;;2380:220;;;;:::o;2872:288::-;2975:4;3006:8;:14;3015:4;3006:14;;;;;;;;;;;;;;;:26;3021:10;3006:26;;;;;;;;;;;;;;;;2997:5;:35;;2989:44;;;;;;;;3069:37;3100:5;3069:8;:14;3078:4;3069:14;;;;;;;;;;;;;;;:26;3084:10;3069:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3040:8;:14;3049:4;3040:14;;;;;;;;;;;;;;;:26;3055:10;3040:26;;;;;;;;;;;;;;;:66;;;;3112:26;3122:4;3128:2;3132:5;3112:9;:26::i;:::-;3151:4;3144:11;;2872:288;;;;;:::o;351:88:17:-;406:28;426:7;406:19;:28::i;:::-;351:88;:::o;3611:330:44:-;3711:4;3752:1;3733:21;;:7;:21;;;;3725:30;;;;;;;;3802:45;3836:10;3802:8;:20;3811:10;3802:20;;;;;;;;;;;;;;;:29;3823:7;3802:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;3762:8;:20;3771:10;3762:20;;;;;;;;;;;;;;;:29;3783:7;3762:29;;;;;;;;;;;;;;;:86;;;;3880:7;3859:60;;3868:10;3859:60;;;3889:8;:20;3898:10;3889:20;;;;;;;;;;;;;;;:29;3910:7;3889:29;;;;;;;;;;;;;;;;3859:60;;;;;;;;;;;;;;;;;;3932:4;3925:11;;3611:330;;;;:::o;725:166:34:-;809:4;850:1;831:21;;:7;:21;;;;823:30;;;;;;;;866:4;:11;;:20;878:7;866:20;;;;;;;;;;;;;;;;;;;;;;;;;859:27;;725:166;;;;:::o;1081:234:0:-;1191:4;327:20:36;336:10;327:8;:20::i;:::-;319:29;;;;;;;;1174:2:0;310:15:5;319:5;310:8;:15::i;:::-;302:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:4:0;;1213:24;1231:5;1213:13;:11;:13::i;:::-;:17;;:24;;;;:::i;:::-;:32;;1205:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1289:21;1300:2;1304:5;1289:10;:21::i;:::-;1282:28;;354:1:36;1081:234:0;;;;:::o;763:85::-;824:4;;815:6;:13;811:32;;;837:6;830:4;:13;;;;811:32;763:85;:::o;741:116:35:-;796:23;811:7;796;:14;;:23;;;;:::i;:::-;844:7;830:22;;;;;;;;;;;;741:116;:::o;948:106:5:-;1007:4;1026:13;:23;1040:8;1026:23;;;;;;;;;;;;;;;;;;;;;;;;;1019:30;;948:106;;;:::o;741:116:37:-;796:23;811:7;796;:14;;:23;;;;:::i;:::-;844:7;830:22;;;;;;;;;;;;741:116;:::o;629:108::-;681:20;693:7;681;:11;;:20;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;::35:-;681:20;693:7;681;:11;;:20;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;::36:-;681:20;693:7;681;:11;;:20;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;859:85:5:-;934:5;911:13;:20;925:5;911:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;859:85;:::o;4397:340:44:-;4502:4;4543:1;4524:21;;:7;:21;;;;4516:30;;;;;;;;4593:50;4627:15;4593:8;:20;4602:10;4593:20;;;;;;;;;;;;;;;:29;4614:7;4593:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4553:8;:20;4562:10;4553:20;;;;;;;;;;;;;;;:29;4574:7;4553:29;;;;;;;;;;;;;;;:91;;;;4676:7;4655:60;;4664:10;4655:60;;;4685:8;:20;4694:10;4685:20;;;;;;;;;;;;;;;:29;4706:7;4685:29;;;;;;;;;;;;;;;;4655:60;;;;;;;;;;;;;;;;;;4728:4;4721:11;;4397:340;;;;:::o;1637:127::-;1698:4;1710:32;1720:10;1732:2;1736:5;1710:9;:32::i;:::-;1755:4;1748:11;;1637:127;;;;:::o;716:139:5:-;790:1;773:19;;:5;:19;;;;765:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;846:4;823:13;:20;837:5;823:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;716:139;:::o;1796:169:42:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;1078:131:41:-;1136:7;1172:9;1164:1;1159;:6;;1151:15;;;;;;;;1188:1;1184;:5;1172:17;;1203:1;1196:8;;1078:131;;;;;:::o;4937:277:44:-;5029:9;:15;5039:4;5029:15;;;;;;;;;;;;;;;;5020:5;:24;;5012:33;;;;;;;;5073:1;5059:16;;:2;:16;;;;5051:25;;;;;;;;5101:26;5121:5;5101:9;:15;5111:4;5101:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5083:9;:15;5093:4;5083:15;;;;;;;;;;;;;;;:44;;;;5149:24;5167:5;5149:9;:13;5159:2;5149:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5133:9;:13;5143:2;5133:13;;;;;;;;;;;;;;;:40;;;;5199:2;5184:25;;5193:4;5184:25;;;5203:5;5184:25;;;;;;;;;;;;;;;;;;4937:277;;;:::o;741:116:36:-;796:23;811:7;796;:14;;:23;;;;:::i;:::-;844:7;830:22;;;;;;;;;;;;741:116;:::o;1272:131:41:-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o;430:144:46:-;522:4;327:20:36;336:10;327:8;:20::i;:::-;319:29;;;;;;;;536:16:46;542:2;546:5;536;:16::i;:::-;565:4;558:11;;430:144;;;;:::o;477:170:34:-;571:1;552:21;;:7;:21;;;;544:30;;;;;;;;588:18;592:4;598:7;588:3;:18::i;:::-;580:27;;;;;;;;637:5;614:4;:11;;:20;626:7;614:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;477:170;;:::o;244:167::-;335:1;316:21;;:7;:21;;;;308:30;;;;;;;;353:18;357:4;363:7;353:3;:18::i;:::-;352:19;344:28;;;;;;;;402:4;379;:11;;:20;391:7;379:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:167;;:::o;5541:235:44:-;5622:1;5611:7;:12;;;;5603:21;;;;;;;;5645:23;5662:5;5645:12;;:16;;:23;;;;:::i;:::-;5630:12;:38;;;;5695:29;5718:5;5695:9;:18;5705:7;5695:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;5674:9;:18;5684:7;5674:18;;;;;;;;;;;;;;;:50;;;;5756:7;5735:36;;5752:1;5735:36;;;5765:5;5735:36;;;;;;;;;;;;;;;;;;5541:235;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../universaltoken.sol\";\nimport \"./MinterRoleMock.sol\";\n\ncontract MintableUniversalTokenMock is MinterRoleMock, UniversalToken {\n\n  constructor(address initialAccount, uint256 initialBalance)\n      public\n      UniversalToken(initialBalance.mul(2), 100, 3000)\n  {\n    // super.transferOwnership(initialAccount);\n    if (!super.isMinter(initialAccount)) super.addMinter(initialAccount);\n    // super.addDepot(initialAccount);\n    // super.mint(initialAccount, initialBalance);\n  }\n\n  function mint(address to, uint256 amount) public returns (bool) {\n    super.addDepot(to);\n    super.mint(to, amount);\n  }\n\n}\n",
  "sourcePath": "C:\\Users\\ctapa\\source\\payment-system-contracts\\contracts\\mocks\\MintableUniversalTokenMock.sol",
  "ast": {
    "absolutePath": "/C/Users/ctapa/source/payment-system-contracts/contracts/mocks/MintableUniversalTokenMock.sol",
    "exportedSymbols": {
      "MintableUniversalTokenMock": [
        1575
      ]
    },
    "id": 1576,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1517,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:16"
      },
      {
        "absolutePath": "/C/Users/ctapa/source/payment-system-contracts/contracts/universaltoken.sol",
        "file": "../universaltoken.sol",
        "id": 1518,
        "nodeType": "ImportDirective",
        "scope": 1576,
        "sourceUnit": 3723,
        "src": "26:31:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ctapa/source/payment-system-contracts/contracts/mocks/MinterRoleMock.sol",
        "file": "./MinterRoleMock.sol",
        "id": 1519,
        "nodeType": "ImportDirective",
        "scope": 1576,
        "sourceUnit": 1610,
        "src": "58:30:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1520,
              "name": "MinterRoleMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1609,
              "src": "129:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRoleMock_$1609",
                "typeString": "contract MinterRoleMock"
              }
            },
            "id": 1521,
            "nodeType": "InheritanceSpecifier",
            "src": "129:14:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1522,
              "name": "UniversalToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3722,
              "src": "145:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UniversalToken_$3722",
                "typeString": "contract UniversalToken"
              }
            },
            "id": 1523,
            "nodeType": "InheritanceSpecifier",
            "src": "145:14:16"
          }
        ],
        "contractDependencies": [
          93,
          676,
          1609,
          3528,
          3596,
          3722,
          3919,
          4022,
          4125,
          4311,
          4617,
          5126,
          5211,
          5313,
          5382
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1575,
        "linearizedBaseContracts": [
          1575,
          3722,
          3596,
          93,
          5211,
          1609,
          4022,
          5313,
          4311,
          4125,
          5126,
          5382,
          676,
          3919,
          4617,
          3528
        ],
        "name": "MintableUniversalTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1550,
              "nodeType": "Block",
              "src": "295:217:16",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "353:31:16",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1540,
                          "name": "initialAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1525,
                          "src": "369:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1538,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5625,
                          "src": "354:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_MintableUniversalTokenMock_$1575",
                            "typeString": "contract super MintableUniversalTokenMock"
                          }
                        },
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isMinter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3968,
                        "src": "354:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 1541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "354:30:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1549,
                  "nodeType": "IfStatement",
                  "src": "349:68:16",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1546,
                          "name": "initialAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1525,
                          "src": "402:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1543,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5625,
                          "src": "386:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_MintableUniversalTokenMock_$1575",
                            "typeString": "contract super MintableUniversalTokenMock"
                          }
                        },
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addMinter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3980,
                        "src": "386:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 1547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "386:31:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1548,
                    "nodeType": "ExpressionStatement",
                    "src": "386:31:16"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1551,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "278:1:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1530,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "259:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4415,
                      "src": "259:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "259:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "313030",
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "282:3:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "33303030",
                    "id": 1535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "287:4:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3000_by_1",
                      "typeString": "int_const 3000"
                    },
                    "value": "3000"
                  }
                ],
                "id": 1536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1529,
                  "name": "UniversalToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3722,
                  "src": "244:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UniversalToken_$3722_$",
                    "typeString": "type(contract UniversalToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "244:48:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1525,
                  "name": "initialAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "177:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1527,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "201:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "176:48:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:0:16"
            },
            "scope": 1575,
            "src": "165:347:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1573,
              "nodeType": "Block",
              "src": "580:57:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1563,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1553,
                        "src": "601:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1560,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5625,
                        "src": "586:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_MintableUniversalTokenMock_$1575",
                          "typeString": "contract super MintableUniversalTokenMock"
                        }
                      },
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addDepot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 603,
                      "src": "586:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "586:18:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1569,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1553,
                        "src": "621:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1570,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "625:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1566,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5625,
                        "src": "610:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_MintableUniversalTokenMock_$1575",
                          "typeString": "contract super MintableUniversalTokenMock"
                        }
                      },
                      "id": 1568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "610:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "610:22:16"
                }
              ]
            },
            "documentation": null,
            "id": 1574,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1553,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "530:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1555,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "542:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "529:28:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 1559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1558,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "574:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "573:6:16"
            },
            "scope": 1575,
            "src": "516:121:16",
            "stateMutability": "nonpayable",
            "superFunction": 92,
            "visibility": "public"
          }
        ],
        "scope": 1576,
        "src": "90:550:16"
      }
    ],
    "src": "0:641:16"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/ctapa/source/payment-system-contracts/contracts/mocks/MintableUniversalTokenMock.sol",
    "exportedSymbols": {
      "MintableUniversalTokenMock": [
        1575
      ]
    },
    "id": 1576,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1517,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:16"
      },
      {
        "absolutePath": "/C/Users/ctapa/source/payment-system-contracts/contracts/universaltoken.sol",
        "file": "../universaltoken.sol",
        "id": 1518,
        "nodeType": "ImportDirective",
        "scope": 1576,
        "sourceUnit": 3723,
        "src": "26:31:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/ctapa/source/payment-system-contracts/contracts/mocks/MinterRoleMock.sol",
        "file": "./MinterRoleMock.sol",
        "id": 1519,
        "nodeType": "ImportDirective",
        "scope": 1576,
        "sourceUnit": 1610,
        "src": "58:30:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1520,
              "name": "MinterRoleMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1609,
              "src": "129:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRoleMock_$1609",
                "typeString": "contract MinterRoleMock"
              }
            },
            "id": 1521,
            "nodeType": "InheritanceSpecifier",
            "src": "129:14:16"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1522,
              "name": "UniversalToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3722,
              "src": "145:14:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UniversalToken_$3722",
                "typeString": "contract UniversalToken"
              }
            },
            "id": 1523,
            "nodeType": "InheritanceSpecifier",
            "src": "145:14:16"
          }
        ],
        "contractDependencies": [
          93,
          676,
          1609,
          3528,
          3596,
          3722,
          3919,
          4022,
          4125,
          4311,
          4617,
          5126,
          5211,
          5313,
          5382
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1575,
        "linearizedBaseContracts": [
          1575,
          3722,
          3596,
          93,
          5211,
          1609,
          4022,
          5313,
          4311,
          4125,
          5126,
          5382,
          676,
          3919,
          4617,
          3528
        ],
        "name": "MintableUniversalTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1550,
              "nodeType": "Block",
              "src": "295:217:16",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "353:31:16",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1540,
                          "name": "initialAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1525,
                          "src": "369:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1538,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5625,
                          "src": "354:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_MintableUniversalTokenMock_$1575",
                            "typeString": "contract super MintableUniversalTokenMock"
                          }
                        },
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isMinter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3968,
                        "src": "354:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 1541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "354:30:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1549,
                  "nodeType": "IfStatement",
                  "src": "349:68:16",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1546,
                          "name": "initialAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1525,
                          "src": "402:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1543,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5625,
                          "src": "386:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_super$_MintableUniversalTokenMock_$1575",
                            "typeString": "contract super MintableUniversalTokenMock"
                          }
                        },
                        "id": 1545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addMinter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3980,
                        "src": "386:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 1547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "386:31:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 1548,
                    "nodeType": "ExpressionStatement",
                    "src": "386:31:16"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1551,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "278:1:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1530,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1527,
                        "src": "259:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4415,
                      "src": "259:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "259:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "313030",
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "282:3:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "33303030",
                    "id": 1535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "287:4:16",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3000_by_1",
                      "typeString": "int_const 3000"
                    },
                    "value": "3000"
                  }
                ],
                "id": 1536,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1529,
                  "name": "UniversalToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3722,
                  "src": "244:14:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_UniversalToken_$3722_$",
                    "typeString": "type(contract UniversalToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "244:48:16"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1525,
                  "name": "initialAccount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "177:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "177:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1527,
                  "name": "initialBalance",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "201:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "201:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "176:48:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 1537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "295:0:16"
            },
            "scope": 1575,
            "src": "165:347:16",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1573,
              "nodeType": "Block",
              "src": "580:57:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1563,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1553,
                        "src": "601:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1560,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5625,
                        "src": "586:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_MintableUniversalTokenMock_$1575",
                          "typeString": "contract super MintableUniversalTokenMock"
                        }
                      },
                      "id": 1562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addDepot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 603,
                      "src": "586:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "586:18:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1569,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1553,
                        "src": "621:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1570,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "625:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1566,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5625,
                        "src": "610:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_MintableUniversalTokenMock_$1575",
                          "typeString": "contract super MintableUniversalTokenMock"
                        }
                      },
                      "id": 1568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 92,
                      "src": "610:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "610:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1572,
                  "nodeType": "ExpressionStatement",
                  "src": "610:22:16"
                }
              ]
            },
            "documentation": null,
            "id": 1574,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1553,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "530:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "530:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1555,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "542:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "542:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "529:28:16"
            },
            "payable": false,
            "returnParameters": {
              "id": 1559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1558,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1574,
                  "src": "574:4:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1557,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "574:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "573:6:16"
            },
            "scope": 1575,
            "src": "516:121:16",
            "stateMutability": "nonpayable",
            "superFunction": 92,
            "visibility": "public"
          }
        ],
        "scope": 1576,
        "src": "90:550:16"
      }
    ],
    "src": "0:641:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-05-31T01:54:38.515Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "cap()": {
        "return": "the cap for the token minting."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}