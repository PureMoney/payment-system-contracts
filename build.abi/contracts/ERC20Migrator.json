{
  "contractName": "ERC20Migrator",
  "abi": [
    {
      "inputs": [
        {
          "name": "legacyToken",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "legacyToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "paramToken",
          "type": "address"
        }
      ],
      "name": "beginMigration",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "migrateAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"paramToken\",\"type\":\"address\"}],\"name\":\"beginMigration\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"legacyToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"migrateAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"legacyToken\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{\"beginMigration(address)\":{\"details\":\"Begins the migration by setting which is the new token that will be minted. This contract must be a minter for the new token.\",\"params\":{\"paramToken\":\"the token that will be minted\"}},\"legacyToken()\":{\"details\":\"Returns the legacy token that is being migrated.\"},\"migrate(address,uint256)\":{\"details\":\"Transfers part of an account's balance in the old token to this contract, and mints the same amount of new tokens for that account.\",\"params\":{\"account\":\"whose tokens will be migrated\",\"amount\":\"amount of tokens to be migrated\"}},\"migrateAll(address)\":{\"details\":\"Transfers all of an account's allowed balance in the old token to this contract, and mints the same amount of new tokens for that account.\",\"params\":{\"account\":\"whose tokens will be migrated\"}},\"newToken()\":{\"details\":\"Returns the new token to which we are migrating.\"}},\"title\":\"ERC20Migrator\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/ctapa/source/payment-system-contracts/contracts/drafts/ERC20Migrator.sol\":\"ERC20Migrator\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/ctapa/source/payment-system-contracts/contracts/drafts/ERC20Migrator.sol\":{\"keccak256\":\"0xb3ca3e18c4f5d0b8b5b8cb8aabde1b447e364cd4fa5bd11a25d24f99f462803f\",\"urls\":[\"bzzr://85da9bf19bce46e1f897d25c47820a7136f62eaad671c38f06cec4c297a6167d\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xa6e47d62e68903c8fff23500d80e7cc8085b9127995803478d9982cd8a6d49e4\",\"urls\":[\"bzzr://7c87eb3c145fe7592c97baa287501faff7e81c1965333c9b042ffb6b387e94a1\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xc9883d8ad7467c478c825128accf69c8104f54b51354b37be01c0ef1432f9253\",\"urls\":[\"bzzr://fa9ed6b6b7c5a571628b27932215efb36765cc5ed95db03dd1dc3ef416c57fc5\"]},\"openzeppelin-solidity/contracts/math/Math.sol\":{\"keccak256\":\"0x0365106d9cc60f43bef1e54848cff2314964f7748cff1f66dfdccc0fde6ffc2f\",\"urls\":[\"bzzr://a6e46b28e5dc00554fefa37614bbc7727386cd6483a02fe82ee11fd0f1d95a2c\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xdd18f05c74536a06166c90a17ec3c6932853764f292bed314ceb23e730ff83af\",\"urls\":[\"bzzr://1d8a608339978ac18782f7051816cf23b4072d8814979e3ef74788cc6025cca0\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xaa2cf35177f37a9af9c975a973c813c5520be56ccee3a39b6c9883d4781cd072\",\"urls\":[\"bzzr://2244d517ff73299ad9b6c9dcb7d0788e5e452d8b1624d3027c1fb152135de8f4\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x9f78ffbde6b7ea69b440136d5bdec213eac31de62a7689e8f6eed5cf3d1ebf4e\",\"urls\":[\"bzzr://cf41973b51764cd1699274eee6f379760cf6b92ddee1634712363f713c8c20e3\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc8a7f15fa44eb10057f8bcb58418d3aed6f5267d211d18f93f3d4e0293e3da44\",\"urls\":[\"bzzr://8825e2508348b01a091ff47b8525e583b6e5604f6679684f805d67a9a6a2a7e9\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x0a172a0ef8681d4a7d8034d003670a9b1968d914b0bfa64e13ddca289a85d24a\",\"urls\":[\"bzzr://733b6203c967b44d6de90b5c6b144e58a380a3f29befb2dc70e765dae2f1ca18\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806109c583398101806040528101908080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561006f57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610906806100bf6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063104d26141461007257806313155455146100b55780635a8cadb11461010c578063ad68ebf71461014f578063c42bd05a1461019c575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101f3565b005b3480156100c157600080fd5b506100ca6103b1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b5061014d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103da565b005b34801561015b57600080fd5b5061019a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610621565b005b3480156101a857600080fd5b506101b1610774565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561025057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561028c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663aa271e1a306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b505050506040513d602081101561035157600080fd5b8101908080519060200190929190505050151561036d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561049b57600080fd5b505af11580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b810190808051906020019092919050505092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1580156105c857600080fd5b505af11580156105dc573d6000803e3d6000fd5b505050506040513d60208110156105f257600080fd5b8101908080519060200190929190505050915061060f838361079e565b905061061b8482610621565b50505050565b61066f8230836000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107b7909392919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b505050506040513d602081101561075e57600080fd5b8101908080519060200190929190505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008183106107ad57816107af565b825b905092915050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561088e57600080fd5b505af11580156108a2573d6000803e3d6000fd5b505050506040513d60208110156108b857600080fd5b810190808051906020019092919050505015156108d457600080fd5b505050505600a165627a7a7230582001f8b814dca29640f933d19418082aa450461e4f68bbddb8c966d050f0742ca10029",
  "deployedBytecode": "0x60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063104d26141461007257806313155455146100b55780635a8cadb11461010c578063ad68ebf71461014f578063c42bd05a1461019c575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101f3565b005b3480156100c157600080fd5b506100ca6103b1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b5061014d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103da565b005b34801561015b57600080fd5b5061019a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610621565b005b3480156101a857600080fd5b506101b1610774565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561025057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561028c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663aa271e1a306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b505050506040513d602081101561035157600080fd5b8101908080519060200190929190505050151561036d57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561049b57600080fd5b505af11580156104af573d6000803e3d6000fd5b505050506040513d60208110156104c557600080fd5b810190808051906020019092919050505092506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e85306040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050602060405180830381600087803b1580156105c857600080fd5b505af11580156105dc573d6000803e3d6000fd5b505050506040513d60208110156105f257600080fd5b8101908080519060200190929190505050915061060f838361079e565b905061061b8482610621565b50505050565b61066f8230836000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166107b7909392919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561073457600080fd5b505af1158015610748573d6000803e3d6000fd5b505050506040513d602081101561075e57600080fd5b8101908080519060200190929190505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008183106107ad57816107af565b825b905092915050565b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561088e57600080fd5b505af11580156108a2573d6000803e3d6000fd5b505050506040513d60208110156108b857600080fd5b810190808051906020019092919050505015156108d457600080fd5b505050505600a165627a7a7230582001f8b814dca29640f933d19418082aa450461e4f68bbddb8c966d050f0742ca10029",
  "sourceMap": "1739:2009:6:-;;;2015:116;8:9:-1;5:2;;;30:1;27;20:12;5:2;2015:116:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2091:1;2068:25;;:11;:25;;;;2060:34;;;;;;;;2115:11;2100:12;;:26;;;;;;;;;;;;;;;;;;2015:116;1739:2009;;;;;;",
  "deployedSourceMap": "1739:2009:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2649:208;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2649:208:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;2206:82;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2206:82:6;;;;;;;;;;;;;;;;;;;;;;;;;;;3498:248;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3498:248:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;3121:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3121:157:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2363:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2363:76:6;;;;;;;;;;;;;;;;;;;;;;;;;;;2649:208;2741:1;2720:23;;:9;;;;;;;;;;;:23;;;2712:32;;;;;;;;2780:1;2758:24;;:10;:24;;;;2750:33;;;;;;;;2797:10;:19;;;2817:4;2797:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2797:25:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2797:25:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2797:25:6;;;;;;;;;;;;;;;;2789:34;;;;;;;;2842:10;2830:9;;:22;;;;;;;;;;;;;;;;;;2649:208;:::o;2206:82::-;2250:6;2271:12;;;;;;;;;;;2264:19;;2206:82;:::o;3498:248::-;3548:15;3603:17;3666:14;3566:12;;;;;;;;;;;:22;;;3589:7;3566:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3566:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3566:31:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3566:31:6;;;;;;;;;;;;;;;;3548:49;;3623:12;;;;;;;;;;;:22;;;3646:7;3655:4;3623:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3623:37:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3623:37:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3623:37:6;;;;;;;;;;;;;;;;3603:57;;3683:28;3692:7;3701:9;3683:8;:28::i;:::-;3666:45;;3717:24;3725:7;3734:6;3717:7;:24::i;:::-;3498:248;;;;:::o;3121:157::-;3184:52;3214:7;3223:4;3229:6;3184:12;;;;;;;;;;;:29;;;;:52;;;;;;:::i;:::-;3242:9;;;;;;;;;;;:14;;;3257:7;3266:6;3242:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3242:31:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3242:31:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3242:31:6;;;;;;;;;;;;;;;;;3121:157;;:::o;2363:76::-;2404:6;2425:9;;;;;;;;;;;2418:16;;2363:76;:::o;315:98:40:-;373:7;399:1;395;:5;:13;;407:1;395:13;;;403:1;395:13;388:20;;315:98;;;;:::o;550:171:49:-;680:5;:18;;;699:4;705:2;709:5;680:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;680:35:49;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;680:35:49;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;680:35:49;;;;;;;;;;;;;;;;672:44;;;;;;;;550:171;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\";\nimport \"openzeppelin-solidity/contracts/math/Math.sol\";\n\n/**\n * @title ERC20Migrator\n * @dev This contract can be used to migrate an ERC20 token from one\n * contract to another, where each token holder has to opt-in to the migration.\n * To opt-in, users must approve for this contract the number of tokens they\n * want to migrate. Once the allowance is set up, anyone can trigger the\n * migration to the new token contract. In this way, token holders \"turn in\"\n * their old balance and will be minted an equal amount in the new token.\n * The new token contract must be mintable. For the precise interface refer to\n * OpenZeppelin's ERC20Mintable, but the only functions that are needed are\n * `isMinter(address)` and `mint(address, amount)`. The migrator will check\n * that it is a minter for the token.\n * The balance from the legacy token will be transfered to the migrator, as it\n * is migrated, and remain there forever.\n * Although this contract can be used in many different scenarios, the main\n * motivation was to provide a way to migrate ERC20 tokens into an upgradeable\n * version of it using ZeppelinOS. To read more about how this can be done\n * using this implementation, please follow the official documentation site of\n * ZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html\n * Example of usage:\n * ```\n * const migrator = await ERC20Migrator.new(legacyToken.address);\n * await newToken.addMinter(migrator.address);\n * await migrator.beginMigration(newToken.address);\n * ```\n */\ncontract ERC20Migrator {\n  using SafeERC20 for IERC20;\n\n  /// Address of the old token contract\n  IERC20 private _legacyToken;\n\n  /// Address of the new token contract\n  ERC20Mintable private _newToken;\n\n  /**\n   * @param legacyToken address of the old token contract\n   */\n  constructor(IERC20 legacyToken) public {\n    require(legacyToken != address(0));\n    _legacyToken = legacyToken;\n  }\n\n  /**\n   * @dev Returns the legacy token that is being migrated.\n   */\n  function legacyToken() public view returns (IERC20) {\n    return _legacyToken;\n  }\n\n  /**\n   * @dev Returns the new token to which we are migrating.\n   */\n  function newToken() public view returns (IERC20) {\n    return _newToken;\n  }\n\n  /**\n   * @dev Begins the migration by setting which is the new token that will be\n   * minted. This contract must be a minter for the new token.\n   * @param paramToken the token that will be minted\n   */\n  function beginMigration(ERC20Mintable paramToken) public {\n    require(_newToken == address(0));\n    require(paramToken != address(0));\n    require(paramToken.isMinter(this));\n\n    _newToken = paramToken;\n  }\n\n  /**\n   * @dev Transfers part of an account's balance in the old token to this\n   * contract, and mints the same amount of new tokens for that account.\n   * @param account whose tokens will be migrated\n   * @param amount amount of tokens to be migrated\n   */\n  function migrate(address account, uint256 amount) public {\n    _legacyToken.safeTransferFrom(account, this, amount);\n    _newToken.mint(account, amount);\n  }\n\n  /**\n   * @dev Transfers all of an account's allowed balance in the old token to\n   * this contract, and mints the same amount of new tokens for that account.\n   * @param account whose tokens will be migrated\n   */\n  function migrateAll(address account) public {\n    uint256 balance = _legacyToken.balanceOf(account);\n    uint256 allowance = _legacyToken.allowance(account, this);\n    uint256 amount = Math.min(balance, allowance);\n    migrate(account, amount);\n  }\n}\n",
  "sourcePath": "C:\\Users\\ctapa\\source\\payment-system-contracts\\contracts\\drafts\\ERC20Migrator.sol",
  "ast": {
    "absolutePath": "/C/Users/ctapa/source/payment-system-contracts/contracts/drafts/ERC20Migrator.sol",
    "exportedSymbols": {
      "ERC20Migrator": [
        814
      ]
    },
    "id": 815,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 678,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 679,
        "nodeType": "ImportDirective",
        "scope": 815,
        "sourceUnit": 5383,
        "src": "26:64:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 680,
        "nodeType": "ImportDirective",
        "scope": 815,
        "sourceUnit": 5212,
        "src": "91:71:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 681,
        "nodeType": "ImportDirective",
        "scope": 815,
        "sourceUnit": 5527,
        "src": "163:67:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/Math.sol",
        "file": "openzeppelin-solidity/contracts/math/Math.sol",
        "id": 682,
        "nodeType": "ImportDirective",
        "scope": 815,
        "sourceUnit": 4381,
        "src": "231:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC20Migrator\n@dev This contract can be used to migrate an ERC20 token from one\ncontract to another, where each token holder has to opt-in to the migration.\nTo opt-in, users must approve for this contract the number of tokens they\nwant to migrate. Once the allowance is set up, anyone can trigger the\nmigration to the new token contract. In this way, token holders \"turn in\"\ntheir old balance and will be minted an equal amount in the new token.\nThe new token contract must be mintable. For the precise interface refer to\nOpenZeppelin's ERC20Mintable, but the only functions that are needed are\n`isMinter(address)` and `mint(address, amount)`. The migrator will check\nthat it is a minter for the token.\nThe balance from the legacy token will be transfered to the migrator, as it\nis migrated, and remain there forever.\nAlthough this contract can be used in many different scenarios, the main\nmotivation was to provide a way to migrate ERC20 tokens into an upgradeable\nversion of it using ZeppelinOS. To read more about how this can be done\nusing this implementation, please follow the official documentation site of\nZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html\nExample of usage:\n```\nconst migrator = await ERC20Migrator.new(legacyToken.address);\nawait newToken.addMinter(migrator.address);\nawait migrator.beginMigration(newToken.address);\n```",
        "fullyImplemented": true,
        "id": 814,
        "linearizedBaseContracts": [
          814
        ],
        "name": "ERC20Migrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 685,
            "libraryName": {
              "contractScope": null,
              "id": 683,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5526,
              "src": "1772:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$5526",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1766:27:6",
            "typeName": {
              "contractScope": null,
              "id": 684,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5382,
              "src": "1786:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5382",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 687,
            "name": "_legacyToken",
            "nodeType": "VariableDeclaration",
            "scope": 814,
            "src": "1837:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5382",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 686,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5382,
              "src": "1837:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5382",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 689,
            "name": "_newToken",
            "nodeType": "VariableDeclaration",
            "scope": 814,
            "src": "1909:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "contractScope": null,
              "id": 688,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5211,
              "src": "1909:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                "typeString": "contract ERC20Mintable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "2054:77:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 695,
                          "name": "legacyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 691,
                          "src": "2068:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$5382",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2091:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2083:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2083:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2068:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5544,
                        5545
                      ],
                      "referencedDeclaration": 5544,
                      "src": "2060:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 702,
                      "name": "_legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "2100:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5382",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 703,
                      "name": "legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 691,
                      "src": "2115:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5382",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2100:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:26:6"
                }
              ]
            },
            "documentation": "@param legacyToken address of the old token contract",
            "id": 707,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "name": "legacyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "2027:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5382",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 690,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5382,
                    "src": "2027:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2026:20:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2054:0:6"
            },
            "scope": 814,
            "src": "2015:116:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "2258:30:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 712,
                    "name": "_legacyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 687,
                    "src": "2271:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 711,
                  "id": 713,
                  "nodeType": "Return",
                  "src": "2264:19:6"
                }
              ]
            },
            "documentation": "@dev Returns the legacy token that is being migrated.",
            "id": 715,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "legacyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2226:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 710,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2250:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5382",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 709,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5382,
                    "src": "2250:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2249:8:6"
            },
            "scope": 814,
            "src": "2206:82:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "2412:27:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 720,
                    "name": "_newToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 689,
                    "src": "2425:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "functionReturnParameters": 719,
                  "id": 721,
                  "nodeType": "Return",
                  "src": "2418:16:6"
                }
              ]
            },
            "documentation": "@dev Returns the new token to which we are migrating.",
            "id": 723,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "newToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2380:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "2404:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5382",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 717,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5382,
                    "src": "2404:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2403:8:6"
            },
            "scope": 814,
            "src": "2363:76:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 755,
              "nodeType": "Block",
              "src": "2706:151:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 729,
                          "name": "_newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "2720:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                            "typeString": "contract ERC20Mintable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2741:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2733:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2733:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2720:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5544,
                        5545
                      ],
                      "referencedDeclaration": 5544,
                      "src": "2712:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:32:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 737,
                          "name": "paramToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "2758:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                            "typeString": "contract ERC20Mintable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2780:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2772:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2772:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2758:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5544,
                        5545
                      ],
                      "referencedDeclaration": 5544,
                      "src": "2750:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5600,
                            "src": "2817:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                              "typeString": "contract ERC20Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                              "typeString": "contract ERC20Migrator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 745,
                            "name": "paramToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "2797:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMinter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3968,
                          "src": "2797:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2797:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5544,
                        5545
                      ],
                      "referencedDeclaration": 5544,
                      "src": "2789:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "2789:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 751,
                      "name": "_newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "2830:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 752,
                      "name": "paramToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "2842:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "2830:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "2830:22:6"
                }
              ]
            },
            "documentation": "@dev Begins the migration by setting which is the new token that will be\nminted. This contract must be a minter for the new token.\n@param paramToken the token that will be minted",
            "id": 756,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "beginMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "name": "paramToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "2673:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 724,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5211,
                    "src": "2673:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2672:26:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2706:0:6"
            },
            "scope": 814,
            "src": "2649:208:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "3178:100:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 766,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "3214:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 767,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5600,
                        "src": "3223:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                          "typeString": "contract ERC20Migrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 768,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "3229:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                          "typeString": "contract ERC20Migrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 763,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "3184:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5382",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5428,
                      "src": "3184:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5382_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5382_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3184:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "3184:52:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "3257:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "3266:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 771,
                        "name": "_newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "3242:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5210,
                      "src": "3242:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:31:6"
                }
              ]
            },
            "documentation": "@dev Transfers part of an account's balance in the old token to this\ncontract, and mints the same amount of new tokens for that account.\n@param account whose tokens will be migrated\n@param amount amount of tokens to be migrated",
            "id": 779,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "3138:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3138:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "3155:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3137:33:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3178:0:6"
            },
            "scope": 814,
            "src": "3121:157:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "3542:204:6",
              "statements": [
                {
                  "assignments": [
                    785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 785,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "3548:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 784,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 790,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 788,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3589:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 786,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "3566:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5382",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5327,
                      "src": "3566:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3566:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3548:49:6"
                },
                {
                  "assignments": [
                    792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 792,
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "3603:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 791,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3603:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3646:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5600,
                        "src": "3655:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                          "typeString": "contract ERC20Migrator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                          "typeString": "contract ERC20Migrator"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 793,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "3623:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5382",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5336,
                      "src": "3623:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3623:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3603:57:6"
                },
                {
                  "assignments": [
                    800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 800,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "3666:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3666:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 806,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 803,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "3692:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 804,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "3701:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 801,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4380,
                        "src": "3683:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$4380_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4347,
                      "src": "3683:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3683:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3666:45:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 808,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3725:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "3734:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 807,
                      "name": "migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "3717:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:24:6"
                }
              ]
            },
            "documentation": "@dev Transfers all of an account's allowed balance in the old token to\nthis contract, and mints the same amount of new tokens for that account.\n@param account whose tokens will be migrated",
            "id": 813,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "migrateAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "3518:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3518:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3517:17:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3542:0:6"
            },
            "scope": 814,
            "src": "3498:248:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 815,
        "src": "1739:2009:6"
      }
    ],
    "src": "0:3749:6"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/ctapa/source/payment-system-contracts/contracts/drafts/ERC20Migrator.sol",
    "exportedSymbols": {
      "ERC20Migrator": [
        814
      ]
    },
    "id": 815,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 678,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 679,
        "nodeType": "ImportDirective",
        "scope": 815,
        "sourceUnit": 5383,
        "src": "26:64:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 680,
        "nodeType": "ImportDirective",
        "scope": 815,
        "sourceUnit": 5212,
        "src": "91:71:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
        "id": 681,
        "nodeType": "ImportDirective",
        "scope": 815,
        "sourceUnit": 5527,
        "src": "163:67:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/Math.sol",
        "file": "openzeppelin-solidity/contracts/math/Math.sol",
        "id": 682,
        "nodeType": "ImportDirective",
        "scope": 815,
        "sourceUnit": 4381,
        "src": "231:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC20Migrator\n@dev This contract can be used to migrate an ERC20 token from one\ncontract to another, where each token holder has to opt-in to the migration.\nTo opt-in, users must approve for this contract the number of tokens they\nwant to migrate. Once the allowance is set up, anyone can trigger the\nmigration to the new token contract. In this way, token holders \"turn in\"\ntheir old balance and will be minted an equal amount in the new token.\nThe new token contract must be mintable. For the precise interface refer to\nOpenZeppelin's ERC20Mintable, but the only functions that are needed are\n`isMinter(address)` and `mint(address, amount)`. The migrator will check\nthat it is a minter for the token.\nThe balance from the legacy token will be transfered to the migrator, as it\nis migrated, and remain there forever.\nAlthough this contract can be used in many different scenarios, the main\nmotivation was to provide a way to migrate ERC20 tokens into an upgradeable\nversion of it using ZeppelinOS. To read more about how this can be done\nusing this implementation, please follow the official documentation site of\nZeppelinOS: https://docs.zeppelinos.org/docs/erc20_onboarding.html\nExample of usage:\n```\nconst migrator = await ERC20Migrator.new(legacyToken.address);\nawait newToken.addMinter(migrator.address);\nawait migrator.beginMigration(newToken.address);\n```",
        "fullyImplemented": true,
        "id": 814,
        "linearizedBaseContracts": [
          814
        ],
        "name": "ERC20Migrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 685,
            "libraryName": {
              "contractScope": null,
              "id": 683,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5526,
              "src": "1772:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$5526",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1766:27:6",
            "typeName": {
              "contractScope": null,
              "id": 684,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5382,
              "src": "1786:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5382",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 687,
            "name": "_legacyToken",
            "nodeType": "VariableDeclaration",
            "scope": 814,
            "src": "1837:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5382",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 686,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5382,
              "src": "1837:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5382",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 689,
            "name": "_newToken",
            "nodeType": "VariableDeclaration",
            "scope": 814,
            "src": "1909:31:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "contractScope": null,
              "id": 688,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5211,
              "src": "1909:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                "typeString": "contract ERC20Mintable"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 706,
              "nodeType": "Block",
              "src": "2054:77:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 695,
                          "name": "legacyToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 691,
                          "src": "2068:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$5382",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2091:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2083:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2083:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2068:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 694,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5544,
                        5545
                      ],
                      "referencedDeclaration": 5544,
                      "src": "2060:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2060:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 701,
                  "nodeType": "ExpressionStatement",
                  "src": "2060:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 702,
                      "name": "_legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "2100:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5382",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 703,
                      "name": "legacyToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 691,
                      "src": "2115:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5382",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2100:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 705,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:26:6"
                }
              ]
            },
            "documentation": "@param legacyToken address of the old token contract",
            "id": 707,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "name": "legacyToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 707,
                  "src": "2027:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5382",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 690,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5382,
                    "src": "2027:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2026:20:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2054:0:6"
            },
            "scope": 814,
            "src": "2015:116:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "2258:30:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 712,
                    "name": "_legacyToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 687,
                    "src": "2271:12:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 711,
                  "id": 713,
                  "nodeType": "Return",
                  "src": "2264:19:6"
                }
              ]
            },
            "documentation": "@dev Returns the legacy token that is being migrated.",
            "id": 715,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "legacyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2226:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 710,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "2250:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5382",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 709,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5382,
                    "src": "2250:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2249:8:6"
            },
            "scope": 814,
            "src": "2206:82:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "2412:27:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 720,
                    "name": "_newToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 689,
                    "src": "2425:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "functionReturnParameters": 719,
                  "id": 721,
                  "nodeType": "Return",
                  "src": "2418:16:6"
                }
              ]
            },
            "documentation": "@dev Returns the new token to which we are migrating.",
            "id": 723,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "newToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2380:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 718,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "2404:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$5382",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 717,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5382,
                    "src": "2404:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5382",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2403:8:6"
            },
            "scope": 814,
            "src": "2363:76:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 755,
              "nodeType": "Block",
              "src": "2706:151:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 729,
                          "name": "_newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 689,
                          "src": "2720:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                            "typeString": "contract ERC20Mintable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2741:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2733:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2733:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2720:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5544,
                        5545
                      ],
                      "referencedDeclaration": 5544,
                      "src": "2712:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2712:32:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 735,
                  "nodeType": "ExpressionStatement",
                  "src": "2712:32:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 737,
                          "name": "paramToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 725,
                          "src": "2758:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                            "typeString": "contract ERC20Mintable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2780:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2772:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2772:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2758:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5544,
                        5545
                      ],
                      "referencedDeclaration": 5544,
                      "src": "2750:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2750:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 743,
                  "nodeType": "ExpressionStatement",
                  "src": "2750:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 747,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5600,
                            "src": "2817:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                              "typeString": "contract ERC20Migrator"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                              "typeString": "contract ERC20Migrator"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 745,
                            "name": "paramToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "2797:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isMinter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3968,
                          "src": "2797:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2797:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 744,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5544,
                        5545
                      ],
                      "referencedDeclaration": 5544,
                      "src": "2789:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "2789:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 751,
                      "name": "_newToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 689,
                      "src": "2830:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 752,
                      "name": "paramToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 725,
                      "src": "2842:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "2830:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "2830:22:6"
                }
              ]
            },
            "documentation": "@dev Begins the migration by setting which is the new token that will be\nminted. This contract must be a minter for the new token.\n@param paramToken the token that will be minted",
            "id": 756,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "beginMigration",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 725,
                  "name": "paramToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "2673:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 724,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5211,
                    "src": "2673:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2672:26:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2706:0:6"
            },
            "scope": 814,
            "src": "2649:208:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "3178:100:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 766,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "3214:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 767,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5600,
                        "src": "3223:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                          "typeString": "contract ERC20Migrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 768,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "3229:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                          "typeString": "contract ERC20Migrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 763,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "3184:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5382",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5428,
                      "src": "3184:29:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$5382_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$5382_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3184:52:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "3184:52:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "3257:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "3266:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 771,
                        "name": "_newToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 689,
                        "src": "3242:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$5211",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5210,
                      "src": "3242:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:31:6"
                }
              ]
            },
            "documentation": "@dev Transfers part of an account's balance in the old token to this\ncontract, and mints the same amount of new tokens for that account.\n@param account whose tokens will be migrated\n@param amount amount of tokens to be migrated",
            "id": 779,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "3138:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3138:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "3155:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3155:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3137:33:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3178:0:6"
            },
            "scope": 814,
            "src": "3121:157:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "3542:204:6",
              "statements": [
                {
                  "assignments": [
                    785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 785,
                      "name": "balance",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "3548:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 784,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 790,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 788,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3589:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 786,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "3566:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5382",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5327,
                      "src": "3566:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3566:31:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3548:49:6"
                },
                {
                  "assignments": [
                    792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 792,
                      "name": "allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "3603:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 791,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3603:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 798,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3646:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 796,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5600,
                        "src": "3655:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                          "typeString": "contract ERC20Migrator"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Migrator_$814",
                          "typeString": "contract ERC20Migrator"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 793,
                        "name": "_legacyToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 687,
                        "src": "3623:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5382",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "allowance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5336,
                      "src": "3623:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view external returns (uint256)"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3623:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3603:57:6"
                },
                {
                  "assignments": [
                    800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 800,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 813,
                      "src": "3666:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3666:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 806,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 803,
                        "name": "balance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "3692:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 804,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 792,
                        "src": "3701:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 801,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4380,
                        "src": "3683:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$4380_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4347,
                      "src": "3683:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3683:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3666:45:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 808,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "3725:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 809,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "3734:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 807,
                      "name": "migrate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "3717:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:24:6"
                }
              ]
            },
            "documentation": "@dev Transfers all of an account's allowed balance in the old token to\nthis contract, and mints the same amount of new tokens for that account.\n@param account whose tokens will be migrated",
            "id": 813,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "migrateAll",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "3518:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3518:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3517:17:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3542:0:6"
            },
            "scope": 814,
            "src": "3498:248:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 815,
        "src": "1739:2009:6"
      }
    ],
    "src": "0:3749:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-05-31T01:54:38.459Z",
  "devdoc": {
    "methods": {
      "beginMigration(address)": {
        "details": "Begins the migration by setting which is the new token that will be minted. This contract must be a minter for the new token.",
        "params": {
          "paramToken": "the token that will be minted"
        }
      },
      "legacyToken()": {
        "details": "Returns the legacy token that is being migrated."
      },
      "migrate(address,uint256)": {
        "details": "Transfers part of an account's balance in the old token to this contract, and mints the same amount of new tokens for that account.",
        "params": {
          "account": "whose tokens will be migrated",
          "amount": "amount of tokens to be migrated"
        }
      },
      "migrateAll(address)": {
        "details": "Transfers all of an account's allowed balance in the old token to this contract, and mints the same amount of new tokens for that account.",
        "params": {
          "account": "whose tokens will be migrated"
        }
      },
      "newToken()": {
        "details": "Returns the new token to which we are migrating."
      }
    },
    "title": "ERC20Migrator"
  },
  "userdoc": {
    "methods": {}
  }
}